DiagLim <- 5
maxdimension <- 1
Diag1 <- ripsDiag(XX1, maxdimension, DiagLim, printProgress = FALSE)
Diag2 <- ripsDiag(XX2, maxdimension, DiagLim, printProgress = FALSE)
Diag1[["diagram"]]
library(TDA)
XX1 <- circleUnif(20)
XX2 <- circleUnif(20, r = 0.2)
DiagLim <- 5
maxdimension <- 1
Diag1 <- ripsDiag(XX1, maxdimension, DiagLim, printProgress = FALSE)
Diag2 <- ripsDiag(XX2, maxdimension, DiagLim, printProgress = FALSE)
X <- Diag1[["diagram"]]
Y <- Diag2[["diagram"]]
X
X <- X[1:5, ]
X
X[, 2] <- c(0.9193, 1.3813, 1.5142, 0, 1.7699)
X[, 3] <- c(0.9490, 1.3880, 18206, 2.6302, 1.7704)
X
X[3, 3] <- 1.8206
X
Y <- Y[1:7, ]
Y
Y[, 2] <- c(0.9035, 1.3431, 1.3694, 1.4859, 0, 1.7607, 0.7554)
Y[, 3] <- c(0.9615, 1.3462, 1.3959, 1.8504, 2.6647, 1.7781, 0.7610)
Y
bottkeneck(X, Y, dimension = 1)
bottleneck(X, Y, dimension = 1)
bottleneck(X, Y, dimension = 0)
library(ks)
library(ks)
library(TDA)
n <- 2000
X <- c(rnorm(n / 2), rnorm(n / 2, mean = 3, sd = 1.2))
# Construct a grid of points over which we evaluate the function
by <- 0.02
Grid <- seq(-3, 6, by = by)
## bandwidth for kernel density estimator
h <- 0.3
## Bootstrap confidence band
band <- bootstrapBand(X, kde, Grid, B = 80, parallel = FALSE, alpha = 0.05,
h = h)
plot(Grid, band[["fun"]], type = "l", lwd = 2,
ylim = c(0, max(band[["band"]])), main = "kde with 0.95 confidence band")
lines(Grid, pmax(band[["band"]][, 1], 0), col = 2, lwd = 2)
lines(Grid, band[["band"]][, 2], col = 2, lwd = 2)
dev.new()
plot(Grid, band[["fun"]], type = "l", lwd = 2,
ylim = c(0, max(band[["band"]])), main = "kde with 0.95 confidence band")
lines(Grid, pmax(band[["band"]][, 1], 0), col = 2, lwd = 2)
lines(Grid, band[["band"]][, 2], col = 2, lwd = 2)
band <- bootstrapBand(X, kde, Grid, B = 80, parallel = FALSE, alpha = 0.05,
h = h, distance = "bottleneck")
n <- 100
X <- c(rnorm(n / 2), rnorm(n / 2, mean = 3, sd = 1.2))
# Construct a grid of points over which we evaluate the function
by <- 0.02
Grid <- seq(-3, 6, by = by)
## bandwidth for kernel density estimator
h <- 0.3
## Bootstrap confidence band
band <- bootstrapBand(X, kde, Grid, B = 80, parallel = FALSE, alpha = 0.05,
h = h)
plot(Grid, band[["fun"]], type = "l", lwd = 2,
ylim = c(0, max(band[["band"]])), main = "kde with 0.95 confidence band")
lines(Grid, pmax(band[["band"]][, 1], 0), col = 2, lwd = 2)
lines(Grid, band[["band"]][, 2], col = 2, lwd = 2)
install.packages("SiZer")
install.packages("dplyr")
install.packages("tidyr")
install.packages("SiZer")
install.packages("rlang")
install.packages("SiZer")
install.packages("SiZer")
version
install.packages("multimode")
install.packages("diptest")
install.packages("lpdensity")
library("lpdensity")
lpdensity(rnorm(50, 2, 3))
A <- lpdensity(rnorm(50, 2, 3))
A
alpha <- 0.05
qchisq(alpha, 1, 2)
qchisq(alpha, 1, 5)
install.packages("harmonicmeanp")
library(harmonicmeanp)
p.hmp(c(0.02, 0.01, 0.01, 0.03, 0.04, 0.01, 0.005))
pval = c(0.02, 0.01, 0.01, 0.03, 0.04, 0.01, 0.005)
sum(pval)
p.hmp(pval, L = length(pval))
p.hmp(pval, L = length(pval), multilevel = FALSE)
p.hmp(pval, w = c(1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7), L = length(pval))
w = c(1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7)
sum(w)
hmp.stat(pval, w)
library("nparLD")
data("repiration")
data("respiration")
par(mfrow = c(1, 2))
center <- respiration[, "center"]
respiration[1:5, ]
length(unique(respiration$patient))
respiration[respiration$patient == 1, ]
respiration[respiration$patient == 2, ]
respiration[respiration$patient == 69, ]
tmp <- aggregate(respiration$score, by = list(respiration$patient, respiration$treatment, respiration$center), FUN = mean)
tmp <- aggregate(respiration$resp, by = list(respiration$patient, respiration$treatment, respiration$center), FUN = mean)
tmp[1:5, ]
tmp
install.packages("meta")
library(meta)
mu <- c(0.9310    0.9920    0.9783    0.9971    0.9946)
mu <- c(0.9310,    0.9920,    0.9783,    0.9971,    0.9946)
sgm <- c(0.0021,    0.0010,    0.0015,    0.0002,    0.0008)
metagen(mu, sgm, sm = "MD", method.tau = "PM")
metagen(mu, sgm, sm = "MD", method.tau = "DL")
mu
sgm
mu <- c(0.930993, 0.992006, 0.978310, 0.997148, 0.994642)
sgm <- c(0.002052, 0.001020, 0.001464, 0.000216, 0.000837)
metagen(mu, sgm, sm = "MD", method.tau = "DL")
setwd("~/MATLAB/projects/song-speech-analysis")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
esinfo
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
esinfo_i
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
plot(g)
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = FALSE)
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none")
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL)
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL)
plot(g)
min(esinfo_i$d)
max(esinfo_i$d)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL)
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL)
plot(g)
ANALYSISPATTERN
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL)
plot(g)
esinfo
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = ANALYSISPATTERN)
plot(g)
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN))
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = ANALYSISPATTERN)
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN))
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0.05, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN))
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang))
g <- g + geom_dotplot(binaxis = 'y', position = position_jitter(width = 0, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN))
plot(g)
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang)) +
geom_rect(aes(xmin = -0.4, xmax = 0.4, ymin = 0.3, ymax = length(unique(analysis)) + 0.7), fill = "#E46F80", alpha = 0.01, show.legend = FALSE) +
geom_violin(fill = "#FCAE1E", alpha = 0.2) +
geom_dotplot(binaxis = 'y', position = position_jitter(width = 0, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
geom_vline(xintercept = 0.4, linetype = 3) +
geom_vline(xintercept = -0.4, linetype = 3)
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang)) +
geom_rect(aes(xmin = -0.4, xmax = 0.4, ymin = 0.3, ymax = length(unique(analysis)) + 0.7), fill = "#E46F80", alpha = 0.01, show.legend = FALSE) +
geom_violin(fill = "#FCAE1E", alpha = 0.2) +
geom_dotplot(binaxis = 'y', position = position_jitter(width = 0, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
geom_vline(xintercept = 0.4, linetype = 3) +
geom_vline(xintercept = -0.4, linetype = 3)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN))
plot(g)
unique(esinfo_i$lang)
setwd("~/MATLAB/projects/song-speech-analysis/util")
rm(list = ls())
source("~/MATLAB/projects/song-speech-analysis/util/mapcolorcode.R")
source("~/MATLAB/projects/song-speech-analysis/util/mapcolorcode.R")
source("~/MATLAB/projects/song-speech-analysis/util/mapcolorcode.R")
source("~/MATLAB/projects/song-speech-analysis/util/mapcolorcode.R")
source("~/MATLAB/projects/song-speech-analysis/util/mapcolorcode.R")
cols
source("~/MATLAB/projects/song-speech-analysis/util/mapcolorcode.R")
source("~/MATLAB/projects/song-speech-analysis/util/mapcolorcode.R")
setwd("~/MATLAB/projects/song-speech-analysis")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <= 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang)) +
geom_rect(aes(xmin = -0.4, xmax = 0.4, ymin = 0.3, ymax = length(unique(analysis)) + 0.7), fill = "#E46F80", alpha = 0.01, show.legend = FALSE) +
geom_violin(fill = "#FCAE1E", alpha = 0.2) +
geom_dotplot(binaxis = 'y', position = position_jitter(width = 0, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
geom_vline(xintercept = 0.4, linetype = 3) +
geom_vline(xintercept = -0.4, linetype = 3)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN)) +
scale_fill_manual(values = LANGCOLORMAP$rgb, breaks = LANGCOLORMAP$lang_filename)
plot(g)
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang)) +
geom_rect(aes(xmin = -0.4, xmax = 0.4, ymin = 0.3, ymax = length(unique(analysis)) + 0.7), fill = "#E46F80", alpha = 0.01, show.legend = FALSE) +
geom_violin(fill = "#FCAE1E", alpha = 0.2) +
geom_dotplot(binaxis = 'y', position = position_jitter(width = 0, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
geom_vline(xintercept = 0.4, linetype = 3) +
geom_vline(xintercept = -0.4, linetype = 3)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN)) +
scale_fill_manual(values = LANGCOLORMAP$rgb, breaks = LANGCOLORMAP$lang_filename)
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
i <- i
i <- 1
CIinfo_i <- read.csv(file = paste(INPUTDIR[i], "ma_seg_song-desc_", DURATION[i], "sec.csv", sep = ""))
CIinfo_i <- read.csv(file = paste(INPUTDIR[i], "ma_acoustic_song-desc_", DURATION[i], "sec.csv", sep = ""))
Cinfo_i
CIinfo_i
CIinfo_i$feature %IN% FEATURESET_DIFF
CIinfo_i$feature %in% FEATURESET_DIFF
FEATURESET_DIFF <- c("f0", "-|Δf0|")
FEATURESET_SIM <- c("Spectral centroid")
CIinfo_i$feature %in% FEATURESET_DIFF
CIinfo_i$CI_l[CIinfo_i$feature %in% FEATURESET_DIFF] <- CIinfo_i$mean[CIinfo_i$feature %in% FEATURESET_DIFF]
CIinfo_i
CIinfo_i <- read.csv(file = paste(INPUTDIR[i], "ma_acoustic_song-desc_", DURATION[i], "sec.csv", sep = ""))
CIinfo_i$CI_u[CIinfo_i$feature %in% FEATURESET_DIFF] <- CIinfo_i$mean[CIinfo_i$feature %in% FEATURESET_DIFF]
CIinfo_i
data.frame(feature = CIinfo_i$feature, vertex = CIinfo_i$CI_l)
rbind(data.frame(feature = CIinfo_i$feature, vertex = CIinfo_i$CI_l, type = "CI_l"),
data.frame(feature = CIinfo_i$feature, vertex = CIinfo_i$CI_u, type = "CI_l")
)
CIinfo = c()
for (i in 1:length(INPUTDIR)) {
CIinfo_i <- read.csv(file = paste(INPUTDIR[i], "ma_acoustic_song-desc_", DURATION[i], "sec.csv", sep = ""))
CIinfo_i$CI_u[CIinfo_i$feature %in% FEATURESET_DIFF] <- CIinfo_i$mean[CIinfo_i$feature %in% FEATURESET_DIFF]
CIinfo_i <- rbind(data.frame(feature = CIinfo_i$feature, vertex = CIinfo_i$CI_l, type = "CI_l"),
data.frame(feature = CIinfo_i$feature, vertex = CIinfo_i$CI_u, type = "CI_l")
)
CIinfo_i$analysis <- ANALYSISPATTERN[i]
CIinfo_i$groupID <- paste(CIinfo_i$feature, "-", CIinfo_i$analysis, sep = "")
CIinfo = rbind(CIinfo, CIinfo_i)
}
CIinfo
esinfo$d <- sqrt(2)*sqrt(2)*qnorm(esinfo$diff, 0, 1)
CIinfo$d <- sqrt(2)*sqrt(2)*qnorm(esinfo$vertex, 0, 1)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
i <- 1
CI_temp <- read.csv(file = paste(INPUTDIR[i], "ma_acoustic_song-desc_", DURATION[i], "sec.csv", sep = ""))
CI_temp$CI_u[CI_temp$feature %in% FEATURESET_DIFF] <- CI_temp$mean[CI_temp$feature %in% FEATURESET_DIFF]
CIinfo_i <- rbind(data.frame(feature = CI_temp$feature, vertex = CI_temp$CI_l, type = "CI_l"),
data.frame(feature = CI_temp$feature, vertex = CI_temp$CI_u, type = "CI_l")
)
CIinfo_i$analysis <- ANALYSISPATTERN[i]
CIinfo_i$groupID <- paste(CIinfo_i$feature, "-", CIinfo_i$analysis, sep = "")
CI_temp
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
meaninfo
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(g)
i <- 1
esinfo_i <- esinfo[esinfo$feature == FEATURESET[i], ]
CIinfo_i <- CIinfo[CIinfo$feature == FEATURESET[i], ]
meaninfo_i <- meaninfo[meaninfo$feature == FEATURESET[i], ]
g <- ggplot(data = esinfo_i, aes(x = d, y = analysis, fill = lang)) +
geom_rect(aes(xmin = -0.4, xmax = 0.4, ymin = 0.3, ymax = length(unique(analysis)) + 0.7), fill = "#E46F80", alpha = 0.01, show.legend = FALSE) +
geom_violin(fill = "#FCAE1E", alpha = 0.2) +
geom_dotplot(binaxis = 'y', position = position_jitter(width = 0, height = 0.08), stackdir = 'center', alpha = 0.8, dotsize = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
geom_vline(xintercept = 0.4, linetype = 3) +
geom_vline(xintercept = -0.4, linetype = 3)
g <- g +
geom_line(data = CIinfo_i, aes(x = d, y = analysis, group = groupID), position = position_nudge(y = 0.25), show.legend = FALSE) +
geom_point(data = CIinfo_i, aes(x = d, y = analysis), shape = "|", size = 4, position = position_nudge(y = 0.25), show.legend = FALSE) +
geom_point(data = meaninfo_i, aes(x = d, y = analysis), shape = 23, size = 3, fill = "#d7003a", position = position_nudge(y = 0.25), show.legend = FALSE)
g <- g + guides(fill = "none") +
theme(axis.title.y = element_blank()) +
xlab("Translated Cohen's D") +
ggtitle(FEATURENAMESET[i]) +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5)) +
scale_x_continuous(breaks = XBREAK, limits = XL) +
scale_y_discrete(limits = rev(ANALYSISPATTERN)) +
scale_fill_manual(values = LANGCOLORMAP$rgb, breaks = LANGCOLORMAP$lang_filename)
plot(g)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
min(esinfo$d)
max(esinfo$d)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
l <- as_ggplot(get_legend(g))
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
plot(l)
gl <- g + guides(fill = "Language family")
l <- as_ggplot(get_legend(gl))
gl <- g + guides(fill = "legend")
l <- as_ggplot(get_legend(gl))
plot(l)
source("~/MATLAB/projects/song-speech-analysis/plot_mixES.R")
ggsave(file = paste(OUTPUTDIR, "AllEffectSizes_legend.png", sep = ""), plot = l, width = 5, height = 5)
